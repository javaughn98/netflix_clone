{"ast":null,"code":"var _jsxFileName = \"/Users/javaughnburke/Library/Mobile Documents/com~apple~CloudDocs/Desktop/myProjects/githubFolder/clones/netflix/netflix/src/MovieRows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport instance from './axios';\nimport './MovieRow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url_main = \"https://image.tmdb.org/t/p/original/\";\n\nfunction MovieRows({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setPosters] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const data = await instance.get(fetchUrl);\n      console.log(data);\n      setPosters(data.data.results);\n      return data;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie_rows\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"row_title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movieData => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"poster\",\n        src: `${url_main}${movieData.poster_path}`,\n        alt: movieData.name\n      }, movieData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieRows, \"/r3afoiAp+X9JrGLiz1boJ4ofRw=\");\n\n_c = MovieRows;\nexport default MovieRows;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieRows\");","map":{"version":3,"sources":["/Users/javaughnburke/Library/Mobile Documents/com~apple~CloudDocs/Desktop/myProjects/githubFolder/clones/netflix/netflix/src/MovieRows.js"],"names":["React","useState","useEffect","instance","url_main","MovieRows","title","fetchUrl","movies","setPosters","fetchData","data","get","console","log","results","map","movieData","poster_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AACA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAwC;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,SAAf,GAA2B;AACvB,YAAMC,IAAI,GAAI,MAAMR,QAAQ,CAACS,GAAT,CAAaL,QAAb,CAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,MAAAA,UAAU,CAACE,IAAI,CAACA,IAAL,CAAUI,OAAX,CAAV;AACD,aAAOJ,IAAP;AACF;;AACDD,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,WAAhB;AAAA,gBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,gBACEE,MAAM,CAACQ,GAAP,CAAYC,SAAD,iBACR;AAEA,QAAA,SAAS,EAAG,QAFZ;AAGA,QAAA,GAAG,EAAG,GAAEb,QAAS,GAAEa,SAAS,CAACC,WAAY,EAHzC;AAIA,QAAA,GAAG,EAAED,SAAS,CAACE;AAJf,SACOF,SAAS,CAACG,EADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA7BQf,S;;KAAAA,S;AA+BT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport instance from './axios';\nimport './MovieRow.css'\n\nconst url_main = \"https://image.tmdb.org/t/p/original/\";\nfunction MovieRows({ title, fetchUrl }) {\n    const [movies, setPosters] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const data =  await instance.get(fetchUrl)\n            console.log(data);\n            setPosters(data.data.results);\n           return data\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    return (\n        <div className=\"movie_rows\">\n            <h1 className = \"row_title\">{title}</h1>\n            <div className = \"posters\">\n             {movies.map((movieData) => (\n                 <img\n                 key = {movieData.id}\n                 className = \"poster\"\n                 src={`${url_main}${movieData.poster_path}`}\n                 alt={movieData.name} \n                 />\n             ))}  \n                \n            </div>\n        </div>\n    )\n}\n\nexport default MovieRows\n"]},"metadata":{},"sourceType":"module"}